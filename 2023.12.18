# v, e = map(int,input().split())
# # 5 7
#
# matrix = [[0 for _ in range(v)] for _ in range(v)]
#
# for _ in range(e):
#     a, b = map(int, input().split())
#     matrix[a][b] = 1
#     matrix[b][a] = 1


matrix = [[0, 1, 1, 0, 1],
        [1, 0, 1, 0, 0],
        [1, 1, 0, 1, 1],
        [0, 0, 1, 0, 1],
        [1, 0, 1, 1, 0]]

def DFS(matrix, curr, visit):

    print(f"{curr}번째 정점 방문")
    visit[curr] = True
    for i in range(len(matrix[curr])):
        if visit[i] == False and matrix[curr][i] == 1:
            DFS(matrix, i, visit)


visit = [False] * len(matrix)
DFS(matrix, 0, visit)

##############################################################

from collections import deque

matrix = [[0, 1, 1, 0, 1],
          [1, 0, 1, 0, 0],
          [1, 1, 0, 1, 1],
          [0, 0, 1, 0, 1],
          [1, 0, 1, 1, 0]]


def BFS(matrix, start):
    visit = [False] * len(matrix)
    Que = deque([start])

    while(Que):
        curr = Que.popleft()
        print(f"{curr}번째 정점 방문")
        visit[start] = True
        for i in range(len(matrix[curr])):
            if not visit[i] and matrix[curr][i]:
                Que.append(i)
                visit[i] = True

BFS(matrix, 0)


