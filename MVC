MVC란 Model View Controller 의 약자로 애플리케이션을 세 가지 역할로 구분한 개발 방법론을 말한다.

Model
Model은 Data와 애플리케이션이 무엇을 할 것 인지를 정의하는 부분으로 내부 비즈니스 로직을 처리하는 역할을 한다.
즉, 모델은 컨트롤러가 호출을 하면 DB와 연동하여 사용자의 입출력 데이터를 다루는 일과 같은 연관된 비즈니스 로직인 데이터 추출, 저장, 삭제, 업데이트 등의
역할을 수행한다.

Model 규칙

View
사용자에게 보여주는 화면이다.
사용자와 상호작용을 하며 Controller에 받은 모델의 결과값을 사용자에게
화면으로 출력하는 일을 한다. 

View 규칙

Controller
Controller는 Model과 View 사이를 이어주는 인터페이스 역할이다.
사용자로부터 View에 요청이 있다면 Controller는 해당 업무 수행을 하는 Modle을 호출하고 Model이 업무를 처리하면 다시 결과를 view에 전달하는 역할을 한다.

Controller 규칙

MVC의 장점과 한계

장점.
기능 별로 코드를 분리하여 하나의 파일에 코드가 모이는 것을 방지하여 가독성과 코드의 재사용이 증가한다.
각 구성요소들을 독립시켜 협업을 할 때 많은 부분의 개발에만 집중할 수 있어 개발의 효율성을 높여준다. == 분업이 가능하다.
개발 후에도 유지 보수성과 확장성이 보장된다.

단점.
Model과 View는 서로의 정보를 가지고 있지 않은 독립적인 상태라고 표현하지만,
Controller를 통해 소통하기 위해서는 의존성이 완전히 분리 될 ##### 돼서 복잡한 대규모 프로그램의 경우 다수의 View와 Model이 Controller를 통해 연결되기 때문에 컨트롤러가 불필요하게 커질 수 있다.
