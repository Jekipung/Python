flag기법.
플래그 프로그래밍에서, 플래그는 무엇인가를 기억해야하거나
또는 다른 프로그램에게 약속된 신호를 남기기 위한 용도로 프로그램에 의해 
사용되는 미리 정의된 비트(또는 여러 개의 비트들)를 말한다.
http://www.terms.co.kr/flag.htm

stack기법.
스택이란 자료구조는 사전적 정의인 '쌓다' '더미' 와 같습니다.
쉽게 설명하자면, 밑이 막힌 상자를 생각하시면 됩니다.
밑이 막혔으니 위로만 물건을 집어 넣을 수 있고, 뺄 수가 있겠죠?
이러한 구조 때문에 먼저 들어온 물건은 나중에 나갈 수 있고,
나중에 들어온 물건은 먼저 나갈 수 있게 됩니다.
이러한 구조를 '선입후출' '후입선출' 이라고 합니다. 
https://monsieursongsong.tistory.com/4

한쪽이 막혀있는 구조. A가 있는 곳에 B를 넣으면 A위에 B가 올라가고 그 안에
C를 넣으면 B 위로 C가 올라간다. 여기서 값을 꺼낼때는 위에 있는 것부터 꺼낸다.

자신이 원하는 만큼 input을 사용하는 코드.
N=int(input())
a = []
for i in range(N):
    a.append(int(input()))

버블정렬
import random
stack=0
h=0
o=0
p=1
j=0
q=()
w=()
a=[]
for i in range(5):
    a.append(random.randrange(1,101))
h=len(a)
print(a)
while j==0:
    while p < h:
        if a[o] < a[p]:
            o=o+1
            p=p+1
            continue
        else
            q = a[o]
            w = a[p]
            a[p] = q
            a[o] = w
            o=o+1
            p=p+1
        for l in range(h-1):
            if a[l] < a[l+1]:
                stack=stack+1
            if stack==h-1:
                j=1
        stack=0
    p=1
    o=0
    l=0
print(a)

버블정렬 /자신이 원하는 값을 원하는 만큼 집어넣은 후 크기비교 하는 코드

stack=0
h=0
o=0
p=1
j=0
q=()
w=()
N=int(input())
a = []
for m in range(N):
    a.append(int(input()))
h=len(a)
print(a)
while j==0:
    while p < h:
        if a[o] < a[p]:
            o=o+1
            p=p+1
            continue
        else
            q = a[o]
            w = a[p]
            a[p] = q
            a[o] = w
            o=o+1
            p=p+1
        for l in range(h-1):
            if a[l] < a[l+1]:
                stack=stack+1
            if stack==h-1:
                j=1
        stack=0
    p=1
    o=0
    l=0
print(a)

변수 혹은 리스트의 값을 서로 바꾸는 방법.
a=1
b=2
print(a,b)

1 2

a,b=b,a
print(a,b)

2 1

버블정렬 5개는 랜덤 5개는 선택 다른방식으로 작성하기.
import random
j=0
stack=0
a=[]
for i in range(5):
    a.append(random.randrange(1,101))
    a.append((int(input())))
print(a)
while j==0:
    for i in range(len(a)-1):
        if a[i] < a[i + 1]:
            continue
        else:
            a[i],a[i+1] = a[i+1],a[i]
    for l in range(len(a) - 1):
        if a[l] < a[l + 1]:
            stack = stack + 1
        if stack == len(a) - 1:
            j=1
    stack=0
print(a)
